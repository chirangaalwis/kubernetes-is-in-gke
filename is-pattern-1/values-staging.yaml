# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
wso2:
  # WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
  # If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
  subscription:
    username: ""
    password: ""
  deployment:
    # For advanced details on configuring WSO2 Carbon data sources, please see the official documentation (https://docs.wso2.com/display/ADMIN44x/Working+with+Databases).
    db:
      type: postgresql
      host: wso2-rdbms-service-staging-postgresql.wso2-staging.svc.cluster.local
      port: "5432"
      username: wso2carbon
      password: wso2carbon
      bpsDB: WSO2IS_BPS_DB
      identityDB: WSO2IS_IDENTITY_DB
      sharedDB: WSO2IS_SHARED_DB

    wso2is:
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
      dockerRegistry: "gcr.io/research-n-development-209206"
      imageName: "wso2is"
      imageTag: "5.8.0-postgresql"
      # Number of deployment replicas
      replicas: 1
      # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
      minReadySeconds: 30
      strategy:
        rollingUpdate:
          # The maximum number of pods that can be scheduled above the desired number of pods.
          maxSurge: 1
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 250
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 250
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      resources:
        # These are the minimum resource recommendations for running WSO2 Identity and Access Management product profiles
        # as per official documentation (https://docs.wso2.com/display/IS580/Installation+Prerequisites).
        requests:
          # The minimum amount of memory that should be allocated for a Pod
          memory: "2Gi"
          # The minimum amount of CPU that should be allocated for a Pod
          cpu: "2000m"
        limits:
          # The maximum amount of memory that should be allocated for a Pod
          memory: "4Gi"
          # The maximum amount of CPU that should be allocated for a Pod
          cpu: "4000m"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always

  # Configurations for the logstash container image and elasticsearch authorization credentials
  # Centralized logging is disabled by default. If it is required to enable centralized logging, please follow the instructions
  # provided in the documentation (https://github.com/wso2/kubernetes-is/tree/master/advanced/helm/is-pattern-1#enabling-centralized-logging)
  centralizedLogging:
    enabled: false
    logstash:
      imageTag: 7.2.0
      elasticsearch:
        host: wso2-elasticsearch-master
        username: "elastic"
        password: "changeme"
  # Configurations for Prometheus monitoring
  monitoring:
    # Enable Prometheus monitoring. This will start Prometheus exporter on port 2222 and deploy Service monitors
    # for JVM, JMX and Blackbox exporter for Login calls
    enabled: false
    prometheus:
      serviceMonitor:
          # If the black box exporter is deployed in a different Namespace
#          blackBoxNamespace:
          # Prometheus Operator labels to identify Service monitors
          labels:
            release: monitoring
      # Job name of the JMX events
      jmxJobName: "jmx"

kubernetes:
  # Name of Kubernetes service account
  svcaccount: "wso2svc-account"
